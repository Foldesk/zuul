Controller DSL
  - helpers for views like --  <% requires_role(:role) do %>HTML HERE<% end %>



ActiveRecord Authorization
  - account for namespaces when setting classes like Publishers::Role (or test if it just works as is?)
  - maybe rework some of the method and association names to use the provided values instead of the keys (like :user instead of :subject). alternately maybe figure out a way to namespace acts_as_*? would allow something to behave with many acts_as_* without a conflict (i.e. possess Roles AND SpecialRoles)
  - make sure context excludes permission methods when not used
  - allow forcing/restricting contexts (so subject can only be assigned permissions within that context and lookups don't go up the chain)
  - create mixins for join models to add validations and associations, etc.
  
  - include a default Role and Permission model + generator for migration?
  - generators for Role, Permission, RolePermission, SubjectRole, SubjectPermission models?
  - generators for migrations to add fields to custom Role, Permission models?



General
  - error/exception classes and messages
  - i18n error messages
  - move DEFAULT_CLASS stuff to configuration (and create a configuration class to manage global config - Allowables.configure do |config| end)
